<HTML>
<HEAD><TITLE>Интерпретатор алгоритмов Маркова (для PC)</TITLE>
</HEAD><BODY>
<H1 ALIGN="center">Интерпретатор алгоритмов Маркова (для PC)</H1>
<H2 ALIGN="center">Краткое описание</H2>

<H3>1. Запуск системы</H3>

<P>nam.exe - загрузочный модуль, выбор .nam файла к интерпретации
осуществляется в диалоговом режиме</P>
Дополнительная информация находится в файле <A HREF="readme.1st.txt">readme.1st.txt</A>

<H3>2. Формат файлов-описаний алгоритмов (*.nam)</H3>

<UL>
<LI>Каждая формула алгоритма должна располагаться на отдельной строке.
<LI>Правая и левая части терминальной и нетерминальной формул разделяются
знаками -> и ->. соответственно.
<LI>Начальные и конечные пробелы в словах игнорируются.
<LI>Строка, начинающаяся с символа ; (точка с запятой) считается комментарием
и игнорируется при анализе (интерпретации) текста.
<LI>Строка, начинающаяся с псевдо-оператора #LENTA задает начальное
состояние преобразуемого слова (выражения)
<LI>Любая другая строка будет считаться синтаксической ошибкой.
</UL>

<P> Системой осуществляется анализ  .nam файлов на наличие
синтаксических ошибок</P>

<H3>3. Работа с NAM-интерпретатором</H3>

<P>   При  выполнении  программы  в  верхней  части  рабочего окна отображается
информация  о  текущем  состоянии  обрабатываемого  слова, а нижней части -
текст алгоритма с отмеченной текущей строкой-подстановкой</P>

<P><B>Основные команды</B></P>
<UL>
<LI>    F3 - загрузить .nam файл
<LI>    F4 - установить/отредактировать обрабатываемое выражение
<LI>    F8  - пошаговое выполнение
<LI>    F9  - выполнить полностью
</UL>

<P>   Другая информация о доступных командах отображается в строке состояния
программы, по F1 доступна контекстная помощь.</P>

<H3>4. Ограничения.</H3>

<UL><LI>
если при выполнении подстановок получается слово длиннее 78 символов, то
  правые _лишние_ символы отсекаются
</UL>

<H3>5. Bugs</H3>

<P>   Конечно есть.   В   случае   обнаружения  сообщите  автору,  будем  их
перевоспитывать путем полного уничтожения</P>

<H3>6. Комплект поставки</H3>
<P>   К  программе прилагаются примеры решения типовых задач, таких как реверс
слова,  сложение  в  двоичной  системе  счисления,  преобразование из одной
системы счисления в другую etc.<P>
<P>   Их изучение будет небесполезным в плане понимания идеи
введения дополнительного символа-указателя при обработке слова.</P>

<H3>7. Примечания</H3>

<P> Эта  программа  по интерфейсу и способу описания алгоритма Маркова во
многом  схожа  с  unix'овым  nam'ом,  так  что  теперь  и  эти работы можно
отлаживать в родной пи-си-шной атмосфере;</P>

<B><I>12-09-96 - 24-11-96</I></B><BR>
Ганущак Андрей<BR>
<!-- Web vesion by Dmitri Soshnikov & SHWARSICO -->
</BODY></HTML>